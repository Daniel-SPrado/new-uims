{"remainingRequest":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Área de Trabalho/uims/src/components/Client.vue?vue&type=style&index=0&id=2db4bc7b&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Área de Trabalho/uims/src/components/Client.vue","mtime":1586033242598},{"path":"/home/prado/Área de Trabalho/uims/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudG9DZW50ZXJ7CiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLm1haW5UaXRsZXsKICAgIGNvbG9yOiByZ2IoNDIsIDQyLCA0Mik7Cn0KLmV4YW1wbGVDb2xvcnsKICAgIGNvbG9yOiAjZTkxNDE0ZGE7Cn0KCi5jYXJkLWluZm9ybWF0aW9uewogICAgbGluZS1oZWlnaHQ6IDMycHg7CiAgICBmb250LXNpemU6IDE2cHg7CiAgICBmb250LWZhbWlseTogJ0VsZWN0cm9saXplJywgc2Fucy1zZXJpZjsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTc1LCAxODAsIDIwNiwgMC4yNDYpOwogICAgbWFyZ2luLWJvdHRvbTogLTIwcHg7Cn0KCi5jYXJkLXN0YXR1c3sKICAgIGNvbG9yOiAjZDg2ZTE4Owp9CgouY2FyZC1jb250ZW50ewogICAgd2lkdGg6IDEwMCU7CiAgICBsaW5lLWhlaWdodDogMzJweDsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGZvbnQtZmFtaWx5OiAnRWxlY3Ryb2xpemUnLCBzYW5zLXNlcmlmOwogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTEsIDIwOSwgMTE4LCAwLjY5Mik7CiAgICBtYXJnaW4tdG9wOiAtMjBweDsKICAgIG1hcmdpbi1ib3R0b206IC0yMHB4Owp9Cg=="},{"version":3,"sources":["Client.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Client.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <v-btn @click=\"ping()\">\n            oi\n        </v-btn> {{ teste }}\n        <span id=\"ping-guildbit\"></span>\n        <v-card>\n            <span>\n                <div style=\"width: 100%; height: 5px;\" \n                    v-bind:style=\"{backgroundColor: client_info.status_color}\" />\n            </span>\n            <v-card-title>\n                <div class=\"text-xs-center ma-3 mainTitle\"> \n                    {{ client.name }} \n                </div>\n            </v-card-title>\n            <v-card-text v-show=\"isShow\" class=\"text-xs-center \">\n                <div class=\"card-information\"> \n                    <span class=\"ma-3\"> Status:  <span class=\"card-status\"> {{ client_info.status }}  </span> </span><br>\n                    <span class=\"ma-3\"> Network: <span class=\"exampleColor\"> {{ client_info.network }} </span> </span>\n                </div>\n            </v-card-text>\n            <v-card-text v-show=\"!isShow\" class=\"text-xs-center \">\n                <div class=\"card-content\" @click=\"alerta()\">\n                    <span class=\"ma-3\"> channel:  {{ client.channel }} </span><br>\n                    <span class=\"ma-3\"> chipset:  {{ client.chipset }} </span><br>\n                    <span class=\"ma-3\"> processor:{{ client.processor }} </span><br>\n                    <span class=\"ma-3\"> IP: {{ client.ip }} </span>\n                </div>\n            </v-card-text>\n            <v-card-text>\n                <div class=\"\"> \n                    \n                </div>\n            </v-card-text>\n            <v-divider></v-divider>\n            <v-card-actions v-show=\"!show_delete\">\n                <Service></Service>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"isShow = !isShow\"> Config </v-btn>\n            </v-card-actions>\n            <v-card-actions class=\"red\" v-show=\"show_delete\">\n                <v-btn class=\"delete\" text> Delete </v-btn>\n            </v-card-actions>\n        </v-card>\n\n    </div> \n</template>\n\n<script>\nimport Service from \"./Service.vue\";\n// import { Pingar } from \"../function/ping.js\";\nimport Ping from 'ping.js'\n\n\nexport default {    \n    props: [ 'services', 'group' ],\n    components: {\n        Service\n    },\n    data(){\n        return {\n            teste: 'eae',\n            isShow: true,\n            show_delete: false,\n            client_info: {\n                status_color: '',\n                status: 'Unreacheable',\n                network: 'Fail'\n            },\n            color_info: {\n                working: \"#3ed818\",\n                unreacheable: \"#d86e18\",\n                not_working: \"#d81818\"\n            },\n            client:   {\n                channel: \"HTTP\",\n                chipset: \"Linux\",\n                location: \"-15.7797:-47.9297\",\n                mac: \"78:2B:CB:BF:8F:61\",\n                name: \"Linux\",\n                processor: \"x86_64\",\n                serial: \"0000000000000000\",\n                time: \"2020-03-05 14:36:01.900468\",\n                ip: '172.16.9.22'\n            }    \n        }    \n    },\n    async created(){\n    },\n    mounted(){\n    },\n    methods: {\n        alerta(){\n            this.show_delete = !this.show_delete\n        },\n        ping() {\n          let self = this;\n          \n            let url = \"http://google.com\";\n            fetch(url, { mode: 'no-cors'})\n              .then((resp) => {\n                if(!resp.ok || resp.status != 200){\n                    this.teste = false\n                }\n                if(resp.type == \"opaque\"){\n                    this.teste = true\n                }\n              })\n          \n        },\n        chama_alerta(){\n            alert('alert')\n        }\n    }\n}\n</script>\n\n<style scoped>\n.toCenter{\n    align-content: center;\n    text-align: center;\n}\n.mainTitle{\n    color: rgb(42, 42, 42);\n}\n.exampleColor{\n    color: #e91414da;\n}\n\n.card-information{\n    line-height: 32px;\n    font-size: 16px;\n    font-family: 'Electrolize', sans-serif;\n    border-radius: 5px;\n    background-color: rgba(175, 180, 206, 0.246);\n    margin-bottom: -20px;\n}\n\n.card-status{\n    color: #d86e18;\n}\n\n.card-content{\n    width: 100%;\n    line-height: 32px;\n    font-size: 16px;\n    font-family: 'Electrolize', sans-serif;\n    border-radius: 5px;\n    background-color: rgba(211, 209, 118, 0.692);\n    margin-top: -20px;\n    margin-bottom: -20px;\n}\n</style>"]}]}