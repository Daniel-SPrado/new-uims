{"remainingRequest":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Área de Trabalho/uims/src/components/service/listService.vue?vue&type=style&index=0&id=8da07cd8&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Área de Trabalho/uims/src/components/service/listService.vue","mtime":1585059579226},{"path":"/home/prado/Área de Trabalho/uims/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50b0NlbnRlcnsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoK"},{"version":3,"sources":["listService.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA","file":"listService.vue","sourceRoot":"src/components/service","sourcesContent":["<template>\n  <div>\n    <v-dialog\n      v-model=\"dialog\"\n      width=\"80%\"\n    >\n      <template v-slot:activator=\"{ on }\">\n        <v-btn\n          text\n          v-on=\"on\"\n        >\n          <v-icon>mdi-format-list-bulleted</v-icon>\n        </v-btn>\n      </template>\n      <v-card>\n        <v-card-title\n          class=\"headline green lighten-2\"\n          primary-title\n        >\n          Add service - {{ group }}\n        </v-card-title>\n        <br>\n        <v-card-text>  \n        <table v-show=\"showManual\">\n          <tr>\n              <th>Name</th>\n              <th>Channel</th>\n              <th>Mac</th>\n              <th>Chipset</th>\n              <th>Number</th>\n              <th>Add</th>\n          </tr>\n          \n          <tr> \n              <td class=\"toCenter\">\n                <v-text-field v-model=\"manualService.name\"></v-text-field>\n              </td>\n              <td class=\"toCenter\">\n                <v-text-field v-model=\"manualService.channel\"></v-text-field>\n              </td>\n              <td class=\"toCenter\">\n                <v-text-field v-model=\"manualService.mac\"></v-text-field>\n              </td>\n              <td class=\"toCenter\">\n                <v-text-field v-model=\"manualService.chipset\"></v-text-field>\n              </td>\n              <td class=\"toCenter\">\n                <v-text-field v-model=\"manualService.number\"></v-text-field>\n              </td>\n              <td> <v-btn text @click=\"addService(group, manualService)\"> <v-icon>mdi-check</v-icon> </v-btn> </td>\n          </tr>\n        </table>  \n        <table v-show=\"!showManual\">\n          <tr>\n              <th>Name</th>\n              <th>Channel</th>\n              <th>Mac</th>\n              <th>Chipset</th>\n              <th>Number</th>\n              <th>Add</th>\n          </tr>\n          \n          <tr v-for=\"item in services\" :key=\"item.mac\"> \n              <td class=\"toCenter\">{{item.name}}</td>\n              <td class=\"toCenter\">{{item.channel}}</td>\n              <td class=\"toCenter\">{{item.mac}}</td>\n              <td class=\"toCenter\">{{item.chipset}}</td>\n              <td class=\"toCenter\">{{item.number}}</td>\n              <td> <v-btn text @click=\"addService(group, item)\"> <v-icon>mdi-check</v-icon> </v-btn> </td>\n          </tr>\n        </table>\n\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-btn\n            color=\"grey\"\n            text\n            @click=\"showManual = !showManual\"\n          >\n            Manual\n          </v-btn>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"red\"\n            text\n            @click=\"dialog = false\"\n          >\n            Close\n          </v-btn>\n\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n// import addService from \"./addService.vue\";\n// import MockData from \"../../mock/data.js\";\nimport { Service, Group } from \"../../function/index.js\";\n\nlet novoGrupo = new Group();\nlet novoService = new Service();\n\nexport default {\n  props: [ \"group\" ],\n  components: {  },\n  data() {\n      return {\n        services: [],\n        groupName: '',\n        dialog: false,\n        showManual: false,\n        manualService: {\n          name: '',\n          channel: '',\n          mac: '',\n          chipset: '',\n          number: ''\n        }\n\n      }\n  },\n  async mounted(){\n    this.services = (await novoService.getServices()).data\n  },\n  methods: {\n    getServices(){\n      \n    },\n    addService(group, item){\n      novoGrupo.addInGroup(group, item)\n    },\n  }\n}\n</script>\n\n<style scoped>\n.toCenter{\n    text-align: center;\n}\n\n</style>"]}]}