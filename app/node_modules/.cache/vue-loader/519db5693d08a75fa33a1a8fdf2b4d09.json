{"remainingRequest":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Área de Trabalho/uims/src/components/Service.vue?vue&type=style&index=0&id=457a1477&scoped=true&lang=css&","dependencies":[{"path":"/home/prado/Área de Trabalho/uims/src/components/Service.vue","mtime":1585754413605},{"path":"/home/prado/Área de Trabalho/uims/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudG9DZW50ZXJ7CiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLm1haW5UaXRsZXsKICAgIGNvbG9yOiByZ2IoNDIsIDQyLCA0Mik7CiAgICAvKiBjb2xvcjogIzZhZGQ2YWRlOyAqLwogICAgCn0K"},{"version":3,"sources":["Service.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Service.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container grid-list-lg>\n\n        <v-layout row wrap>\n            <v-flex xs12 sm6 md6 lg4 v-for=\"i in service\" :key=\"i.mac\">\n                <v-card>\n                    <span v-if=\"i.ip\">\n                        existe ip\n                    </span>\n                    <span v-else>\n                        <div style=\"width: 100%; height: 5px;\" \n                        v-bind:style=\"{backgroundColor: '#6add6ade'}\" >\n                    </div>\n                    </span>\n                    \n                        <v-card-title>\n                            <div class=\"text-xs-center ma-3 mainTitle\"> {{ i.name }} </div>\n                        </v-card-title>\n                        <v-card-subtitle>\n\n                        </v-card-subtitle>\n                        <v-card-text>\n                            <div class=\"\"> \n                                <lastUpdate v-bind:service=\"i\"></lastUpdate>\n                            </div>\n                        </v-card-text>\n                        <v-divider></v-divider>\n                        <v-card-actions>\n                            <historico \n                                v-bind:service=\"i\"\n                            ></historico>\n                            <command \n                                v-bind:command=\"i\"\n                                v-bind:group=\"group\" \n                            ></command>\n                            <v-spacer></v-spacer>\n                            <settings \n                                v-bind:service=\"i\"\n                                v-bind:group=\"group\"    \n                            ></settings>\n                        </v-card-actions>\n                </v-card> \n            </v-flex>\n        </v-layout> \n  \n    </v-container>   \n</template>\n\n<script>\nimport lastUpdate from \"../components/LastUpdate.vue\";\nimport Historico from \"../components/Data.vue\";\nimport command from \"../components/service/Command.vue\";\nimport settings from \"../components/service/Settings.vue\";\nimport { Command } from \"../function/index.js\";\n\nlet newService = new Command();\n\nexport default {\n    props: [ 'services', 'group' ],\n    components: {\n        lastUpdate,\n        Historico,\n        command,\n        settings\n    },\n    data(){\n        return {\n            hover: false,\n            ipColor: '#5ca1a666',\n            service: '',\n        }\n    },\n    async created(){\n        this.getService();\n    },\n    mounted(){\n\n    },\n    methods: {\n        async getService(){\n            console.log(this.group)\n            this.service = (await newService.getByGroup(this.group)).data \n            console.log()\n        },\n        checkData(){\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n.toCenter{\n    align-content: center;\n    text-align: center;\n}\n.mainTitle{\n    color: rgb(42, 42, 42);\n    /* color: #6add6ade; */\n    \n}\n</style>"]}]}