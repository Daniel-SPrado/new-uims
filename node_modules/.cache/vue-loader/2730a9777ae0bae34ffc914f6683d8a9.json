{"remainingRequest":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/prado/Área de Trabalho/uims/src/components/LastUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/prado/Área de Trabalho/uims/src/components/LastUpdate.vue","mtime":1584296864598},{"path":"/home/prado/Área de Trabalho/uims/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/prado/Área de Trabalho/uims/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERhdGEgfSBmcm9tICIuLi9mdW5jdGlvbi9pbmRleC5qcyI7CgpsZXQgbm92b0RhdGEgPSBuZXcgRGF0YSgpOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogImxhc3RVcGRhdGUiLAogICAgcHJvcHM6IFsgInNlcnZpY2UiIF0sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbGFzdERhdGE6ICdzZW0gZGFkb3MnLAogICAgICAgICAgICBsYXN0VmFsdWU6ICcnLAogICAgICAgIH0KICAgIH0sCiAgICBhc3luYyBtb3VudGVkKCl7CiAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICB0aGlzLmdldExhc3REYXRhKCk7CiAgICAgICAgfSwgNTAwMCkgICAgCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIGdldExhc3REYXRhKCl7CiAgICAgICAgICAgIGxldCBkYXRhID0gKGF3YWl0IG5vdm9EYXRhLmdldExhc3REYXRhKHRoaXMuc2VydmljZS5tYWMsIHRoaXMuc2VydmljZS5jaGlwc2V0LCB0aGlzLnNlcnZpY2UubnVtYmVyKSkuZGF0YTsKICAgICAgICAgICAgbGV0IGxhc3REYXRhID0gZGF0YVswXVsndmFsdWUnXVswXQogICAgICAgICAgICBpZih0aGlzLnNlcnZpY2UucGFyZW10ZXIgPT0gbnVsbCl7CiAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2UucGFyYW1ldGVyID0gInZhbHVlIgogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmKGxhc3REYXRhLmxlbmd0aCA9PSAwKXsKICAgICAgICAgICAgICAgIGxhc3REYXRhID09ICdzZW0gZGFkb3MnCiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgdGhpcy5sYXN0RGF0YSA9IGxhc3REYXRhCiAgICAgICAgICAgIH0KICAgICAgICB9ICAgICAKCiAgICB9Cn0K"},{"version":3,"sources":["LastUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"LastUpdate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"lastUpdate\">\n        <v-container class=\"mainTitle\">\n            {{ service.parameter }}: <span             \n            :class=\"{ \n              'low': lastData == 'sem dados', \n              'medium': lastData == 'carregando', \n              'high': lastData != 'sem dados' & lastData != 'carregando' \n              }\"> {{ lastData }} </span> {{ service.unit }}\n        </v-container>\n    </div>\n</template>\n\n<script>\nimport { Data } from \"../function/index.js\";\n\nlet novoData = new Data();\n\nexport default {\n    name: \"lastUpdate\",\n    props: [ \"service\" ],\n    data(){\n        return {\n            lastData: 'sem dados',\n            lastValue: '',\n        }\n    },\n    async mounted(){\n        setInterval(() => {\n            this.getLastData();\n        }, 5000)    \n    },\n    methods: {\n        async getLastData(){\n            let data = (await novoData.getLastData(this.service.mac, this.service.chipset, this.service.number)).data;\n            let lastData = data[0]['value'][0]\n            if(this.service.paremter == null){\n                this.service.parameter = \"value\"\n            }\n            if(lastData.length == 0){\n                lastData == 'sem dados'\n            }else{\n                this.lastData = lastData\n            }\n        }     \n\n    }\n}\n</script>\n\n<style scoped>\n.low{\n    color:rgb(192, 13, 13);\n}\n.medium{\n    color: rgb(153, 144, 25);\n}\n.high{\n    color: rgb(6, 116, 24);\n}\n.mainTitle{\n    font-size: 18px;\n}\n</style>"]}]}